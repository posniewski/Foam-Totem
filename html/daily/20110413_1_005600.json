{
    "content":"<p>(BTW, this post is mostly for me rather than anyone else.)<\/p>\n<p>After fixing a bug in the CSS and a little more tweaking, it seems like the page layout and HTML are good on most browsers. Both validate (which I forgot to do before making it live-- whoops). Some people saw very, very tiny text. Unbelievably, this was caused by a line in the CSS which said \"background-color: brown\". \"Brown\" isn't a valid color, or isn't allowed there or something. This made older Firefox and Internet Explorer versions screw up other entries in the CSS in strange and arbitrary ways.<\/p>\n<p>Yesterday, I switched to a new data format. Previously, the contents of each post was bundled into a file as a blob which the system just plunked down. Now each post is structured data (in JSON format) and actually carries with it its ID, the time it was posted, and stuff along those lines as individual fields. When the HTML is generated, it uses those fields in addition to the content blob. For now, the main thing this does is let the code generate different HTML structures for the posts depending on its whim. Previously, a good amount of the HTML structure was implicit in the blob of content. The next step along the data axis is to put the data into a NoSQL database such as Mongo or Cloud. For now, though, there's no real need for that. I'm using the file system as the database (with the filenames having the keys I'm sorting on).<\/p>\n<p>I think the next step is generation of an individual page for each post (along with the open graph metadata). I'll definitely do this for regular posts. Unsure about Twitter posts. Probably not.<\/p>\n<p>I'm torn regarding the Twitter entries. I had been (and still do for the moment) bundling all the ones sent during the day into a single block at the end of the day. Using the new layout, and looking forward to how I might integrate Facebook, etc I think I might go back to putting them directly in line at the appropriate spot in the timeline. I'm not really satisfied with the layout of singleton twitter entires, however. They seem a bit bulky, so I'll need to fiddle with that some.<\/p>\n<p>I was also checking on the commenting APIs and noticed that my \"Echo license\" expires in 9 days. I bought a perpetual license to HaloScan years ago, and they were bought by JS-kit, who then were either acquired or transformed into Echo. I can get a $12 a year license to Echo, it seems (because I have so little traffic). That may be worth it just to not switch. If I ever get traffic it's $10 a month. There is no free version. (And jeez, but their website makes it impossible to get price quotes without sending an email to Sales?! Since I already have an account I can \"upgrade\" and see the prices, but if I were a potential new customer I would be stopped dead. Dumb.) An alternative is to go to Disqus\/someone else. A last alternative is to roll my own. This last insane alternative is the only way I know of to let me get both Facebook and non-Facebook comments integrated. As a human person, I think I'm allowed to do this. If I were a corporation (like Echo or Disqus) I think I would be violating the terms of service. Not sure on the technical legality of it all.<\/p>\n<p>A last thing is that I'm working on using WebFonts for the titles. Sadly, the font I bought doesn't work properly. They're looking into it...<\/p>\n<p>(Posted via Posterous email, to test how it gets munged along the way.)<\/p>",
    "id":"20110413_1_005600",
    "link":"http:\/\/posniewski.posterous.com\/revamp-step-two",
    "publishedDate":"2011-04-13T00:56:00+00:00",
    "source":"posterous",
    "title":"Revamp Step Two"
}