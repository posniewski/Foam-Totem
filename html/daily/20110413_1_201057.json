{
    "content":"<div class='p_embed p_image_embed'>\n<a href=\"http:\/\/posterous.com\/getfile\/files.posterous.com\/posniewski\/YMrJWMTsfJ3cGAGQvoSD73NehBV5CMBi2UdB1HwnhLje3lsIM9cQmAyO9pbw\/faust_2.jpg.scaled.1000.jpg\"><img class=\"posterous\" alt=\"Faust_2\" height=\"653\" src=\"http:\/\/posterous.com\/getfile\/files.posterous.com\/posniewski\/urBIwXpCgYad8FRtbxsEXzyR7IvGUI3bjveQyVXrAr8WCA816V1eLFDABl5P\/faust_2.jpg.scaled.500.jpg\" width=\"500\" \/><\/a>\n<\/div>\n<p>Well, GMail makes some pretty strange HTML in its editor, it seems. <br \/>Let's try this with plain text. I'll add an attachment for maximum <br \/>oddity. <p \/> This is a second paragraph. Blah blah. Yesterday, I switched to a new <br \/>data format. Previously, the contents of each post was bundled into a <br \/>file as a blob which the system just plunked down. Now each post is <br \/>structured data (in JSON format) and actually carries with it its ID, <br \/>the time it was posted, and stuff along those lines as individual <br \/>fields. When the HTML is generated, it uses those fields in addition <br \/>to the content blob. <p \/> A third. <p \/> A fourth. I think the next step is generation of an individual page <br \/>for each post (along with the open graph metadata). I'll definitely do <br \/>this for regular posts. Unsure about Twitter posts. Probably not. <br \/>I'm torn regarding the Twitter entries. I had been (and still do for <br \/>the moment) bundling all the ones sent during the day into a single <br \/>block at the end of the day. <p \/> (Posted via Posterous email in plain text, to test how it gets munged <br \/>along the way.)<\/p>",
    "id":"20110413_1_201057",
    "link":"http:\/\/posniewski.posterous.com\/ignore-me",
    "publishedDate":"2011-04-13T20:10:57+00:00",
    "source":"posterous",
    "title":"IGNORE ME!"
}